{
		"swagger": "2.0",
		"info": {
				"version": "0.0.1",
				"title": "Job Cost Tracker",
				"description": "The Job Cost Tracker API is built using [FeathersJS](http://feathersjs.com/) and adheres to a relatively academic implementation of REST. Every model follows the same paradigm for CRUD operations and therefore endpoints will not be covered individually. Each model can be accessed at its lowercase-hyphenated-pluralized name:\n- Foreman -> `/formen`\n- Job -> `/jobs`\n- Lot -> `/lots`\n- Task -> `/tasks`\n- TaskDay -> `/task-days`\n- User -> `/users`"
		},
		"host": "api.jobcosttracker.com",
		"schemes": [
				"http",
				"https"
		],
		"basePath": "/v1",
		"produces": [
				"application/json"
		],
		"paths": {
				"/[models]": {
						"get": {
								"summary": "Get a list of [Models]",
								"description": "",
								"parameters": [
								],
								"tags": ["All Models"],
								"responses": {
										"200": {
												"description": "An array of [Models]",
												"schema": {
														"type": "array",
														"items": {
																"$ref": "#/definitions/Job"
														}
												}
										},
										"default": {
												"description": "Unexpected error",
												"schema": {
														"$ref": "#/definitions/Error"
												}
										}
								}
						},
						"post": {
								"summary": "Create a new [Model].",
								"description": "",
								"parameters": [
								],
								"tags": ["All Models"],
								"responses": {
										"200": {
												"description": "The newly created [Model] object.",
												"schema": {
														"$ref": "#/definitions/Foreman"
												}
										},
										"default": {
												"description": "Unexpected error",
												"schema": {
														"$ref": "#/definitions/Error"
												}
										}
								}
						}
				},
				"/[models]/:_id": {
				  "get": {
								"summary": "Get a [Model] instance with :_id",
								"description": "",
								"parameters": [
								],
								"tags": ["All Models"],
								"responses": {
										"200": {
												"description": "The updated [Model] object",
												"schema": {
														"$ref": "#/definitions/TaskDay"
												}
										},
										"default": {
												"description": "Unexpected error",
												"schema": {
														"$ref": "#/definitions/Error"
												}
										}
								}
					},
				  "put": {
								"summary": "Update the [Model] instance with :_id",
								"description": "",
								"parameters": [
								],
								"tags": ["All Models"],
								"responses": {
										"200": {
												"description": "The updated [Model] object",
												"schema": {
														"$ref": "#/definitions/User"
												}
										},
										"default": {
												"description": "Unexpected error",
												"schema": {
														"$ref": "#/definitions/Error"
												}
										}
								}
						},
						"delete": {
								"summary": "Delete the [Model] instance with :_id",
								"description": "",
								"parameters": [
								],
								"tags": ["All Models"],
								"responses": {
										"200": {
												"description": "The updated [Model] object",
												"schema": {
														"$ref": "#/definitions/Job"
												}
										},
										"default": {
												"description": "Unexpected error",
												"schema": {
														"$ref": "#/definitions/Error"
												}
										}
								}
					}
				}
		},
		"definitions": {
				"BaseObject": {
						"type": "object",
						"properties": {
								"createdAt": {
										"type": "string",
										"format": "dateTime"
								},
								"updatedAt": {
										"type": "string",
										"format": "dateTime"
								}
						}
				},
				"Foreman": {
						"type": "object",
						"allOf": [{
							"$ref": "#/definitions/BaseObject"
						}, {
						  "required": [
						    "name"
						  ],
							"properties": {
								"name": {
										"type": "string",
										"description": "Full name of the foreman."
								}
							}
						}]
				},
				"Job": {
						"type": "object",
						"allOf": [{
							"$ref": "#/definitions/BaseObject"
						}, {
  						"required": [
  								"name"
  						],
  						"properties": {
  								"name": {
  										"type": "string"
  								},
  								"lots": {
  										"type": "array",
  										"items": {
  												"$ref": "#/definitions/Lot"
  										}
  								}
  						}
  				}]
				},
				"Lot": {
						"type": "object",
						"allOf": [{
							"$ref": "#/definitions/BaseObject"
						}, {
  						"required": [
  								"name",
  								"lotNumber"
  						],
  						"properties": {
  								"name": {
  										"type": "string"
  								},
  								"lotNumber": {
  										"type": "string"
  								},
  								"job": {
  										"type": "string",
  										"description": "The ObjectID for the Job to which this lot belongs."
  								},
  								"tasks": {
  										"type": "array",
  										"items": {
  												"$ref": "#/definitions/Task"
  										}
  								}
  						}
						}]
				},
				"Task": {
						"type": "object",
						"allOf": [{
							"$ref": "#/definitions/BaseObject"
						}, {
  						"required": [
  								"name"
  						],
  						"properties": {
  								"name": {
  										"type": "string"
  								},
  								"hours": {
  										"type": "number",
  										"default": 0
  								},
  								"cubicYards": {
  										"type": "number",
  										"default": 0
  								},
  								"tons": {
  										"type": "number",
  										"default": 0
  								},
  								"notes": {
  										"type": "string"
  								},
  								"completed": {
  										"type": "string",
  										"format": "dateTime"
  								},
  								"job": {
  										"type": "string",
  										"description": "The ObjectID for the Job to which this task belongs."
  								},
  								"lot": {
  										"type": "string",
  										"description": "The ObjectID for the Lot to which this task belongs."
  								}
  						}
						}]
				},
				"TaskDay": {
						"type": "object",
						"allOf": [{
							"$ref": "#/definitions/BaseObject"
						}, {
  						"required": [
  								"job",
  								"hours",
  								"cubicYards",
  								"tons",
  								"completed"
  						],
  						"properties": {
  								"job": {
  										"type": "string",
  										"description": "The ObjectID for the Job to which this task day belongs."
  								},
  								"foreman": {
  										"type": "string",
  										"description": "The ObjectID for the Foreman to which this task day is assigned."
  								},
  								"hours": {
  										"type": "number"
  								},
  								"cubicYards": {
  										"type": "number"
  								},
  								"tons": {
  										"type": "number"
  								},
  								"notes": {
  										"type": "string"
  								},
  								"completed": {
  										"type": "string",
  										"format": "dateTime"
  								},
  								"completedTasks": {
  										"type": "array",
  										"items": {
  												"$ref": "#/definitions/Task"
  										}
  								}
  						}
						}]
				},
				"User": {
						"type": "object",
						"required": [
								"name",
								"email"
						],
						"properties": {
								"name": {
										"type": "string"
								},
								"email": {
										"type": "string"
								},
								"nickname": {
										"type": "string"
								},
								"picture": {
										"type": "string"
								},
								"roles": {
										"type": "array",
										"items": {
												"type": "string"
										}
								}
						}
				},
				"Error": {
						"type": "object",
						"properties": {
								"code": {
										"type": "integer",
										"format": "int32"
								},
								"message": {
										"type": "string"
								},
								"fields": {
										"type": "string"
								}
						}
				}
		}
}
